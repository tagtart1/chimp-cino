@use "../../variables" as v;

.roulette-main {
  width: 100%;
  height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #1a2c38;
  flex-direction: column;
  .chip-selection {
    display: flex;
    gap: 12px;
    padding: 12px;
  }
  .roulette-buttons {
    display: grid;
    grid-template-columns: repeat(14, 1fr);
    grid-template-rows: repeat(5, 1fr);
    gap: 3px;
    width: 100%;
    max-width: 850px;

    grid-template-rows: 1fr 1fr;

    button {
      border-radius: 6px;
      display: flex;
      align-items: center;
      justify-content: center;
      min-height: 54px;

      &:active .wrap {
        transform: scale(0.96);
      }
    }

    // Selects all red odd numbers
    .odd.red:has(~ .odd-button:hover),
    .odd-button:hover {
      background-color: v.$roulette_light_red;
    }
    // Selects all black odd numbers
    .odd.black:has(~ .odd-button:hover),
    .odd-button:hover {
      background-color: v.$roulette_light_black;
    }

    // Selects all red even numbers
    .even.red:has(~ .even-button:hover),
    .even-button:hover {
      background-color: v.$roulette_light_red;
    }
    // Selects all black even numbers
    .even.black:has(~ .even-button:hover),
    .even-button:hover {
      background-color: v.$roulette_light_black;
    }

    // Selects all 1to12 red numbers
    .oneto12.red:has(~ .oneto12-button:hover),
    .oneto12-button:hover {
      background-color: v.$roulette_light_red;
    }
    // Selects all 1to12 black numbers
    .oneto12.black:has(~ .oneto12-button:hover),
    .oneto12-button:hover {
      background-color: v.$roulette_light_black;
    }
  }

  .active {
    border: 5px solid white;
    border-radius: 50%;
  }
}
